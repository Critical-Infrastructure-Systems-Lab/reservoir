% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/sdp_hydro.R
\name{sdp_hydro}
\alias{sdp_hydro}
\title{Stochastic Dynamic Programming for Hydropower Reservoir}
\usage{
sdp_hydro(Q, capacity, capacity_live, surface_area, hydro_cap, head, qmax,
  depth, dep_vol_curve = "l", input_curve, S_disc = 1000, R_disc = 10,
  Q_disc = c(0, 0.2375, 0.475, 0.7125, 0.95, 1), S_initial = 1,
  plot = TRUE, tol = 0.99)
}
\arguments{
\item{Q}{time series object. Net inflows to the reservoir.}

\item{capacity}{numerical. The reservoir storage capacity (must be the same volumetric unit as Q).}

\item{capacity_live}{numerical. The live capacity.}

\item{surface_area}{numerical. The reservoir surface area}

\item{hydro_cap}{numerical. The hydropower plant electric capacity (MW)}

\item{head}{numerical. The maximum hydraulic head of the hydropower plant (m)}

\item{qmax}{numerical. The maximum flow into the hydropower plant}

\item{depth}{numerical. The reservoir maximum depth}

\item{dep_vol_curve}{string. The relationship between depth and volume of reservoir.}

\item{input_curve}{data frame of 3 columns: depth, area, volume}

\item{S_disc}{integer. Storage discretization--the number of equally-sized storage states. Default = 1000.}

\item{R_disc}{integer. Release discretization. Default = 10 divisions.}

\item{Q_disc}{vector. Inflow discretization bounding quantiles. Defaults to five inflow classes bounded by quantile vector c(0.0, 0.2375, 0.4750, 0.7125, 0.95, 1.0).}

\item{S_initial}{numeric. The initial storage as a ratio of capacity (0 <= S_initial <= 1). The default value is 1.}

\item{plot}{logical. If TRUE (the default) the storage behavior diagram and release time series are plotted.}

\item{tol}{numerical. The tolerance for policy convergence. The default value is 0.990.}
}
\value{
Returns a list that includes: the optimal policy as an array of release decisions dependent on storage state, month/season, and current-period inflow class; the Bellman cost function based on storage state, month/season, and inflow class; the optimized release and storage time series through the training inflow data; the flow discretization (which is required if the output is to be implemented in the rrv function); and, if requested, the reliability, resilience, and vulnerability of the system under the optimized policy.
}
\description{
Derives the optimal release policy based on storage state, inflow class and within-year period.
}
\examples{
\donttest{storage_cap <- 4 * mean(aggregate(ResX_inflow.ts)) # set storage ratio of 4 years
demand <- 0.8 * mean(ResX_inflow.ts) # set draft ratio of 0.8
optimal.releases <- sdp(ResX_inflow.ts, capacity = storage_cap, target = demand)
}
}
\references{
Loucks, D.P., van Beek, E., Stedinger, J.R., Dijkman, J.P.M. and Villars, M.T. (2005) Water resources systems planning and management: An introduction to methods, models and applications. Unesco publishing, Paris, France.

Gregory R. Warnes, Ben Bolker and Thomas Lumley (2014). gtools: Various R programming tools. R package version 3.4.1. http://CRAN.R-project.org/package=gtools
}
\seealso{
\code{\link{dp}} for deterministic Dynamic Programming
}

